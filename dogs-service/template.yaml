AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Dogs Service - Manages adding and retrieving dogs for users.

Parameters:
  Stage:
    Type: String
    Default: "prod"
  DogsServiceImageExpirationSecParam:
    Type: String
    Default: "3600"
  DogsServiceImageMaxSizeParam:
    Type: String
    Default: "5242880"  # 5MB
  DogsServiceSupportedImageExtensionsParam:
    Type: String
    Default: '["jpg", "jpeg", "png", "webp"]'

Globals:
  Api:
    TracingEnabled: true
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"

  Function:
    Runtime: python3.13
    Timeout: 30
    Tracing: Active
    Architectures:
      - x86_64
    ReservedConcurrentExecutions: 1
    LoggingConfig:
      LogFormat: JSON
    Environment:
      Variables:
        LOG_LEVEL: INFO
        POWERTOOLS_LOGGER_SAMPLE_RATE: "0.1"
        POWERTOOLS_LOGGER_LOG_EVENT: true
        DYNAMODB_ENDPOINT: ""
        DOGS_TABLE_NAME: !Ref DogsTable
        S3_ENDPOINT: ""
        S3_PRESIGN_ENDPOINT: ""
        DOGS_IMAGES_BUCKET: !Sub "${AWS::StackName}-${Stage}-images"
        IMAGE_UPLOAD_EXPIRATION_SECS: !Ref DogsServiceImageExpirationSecParam
        IMAGE_UPLOAD_MAX_SIZE: !Ref DogsServiceImageMaxSizeParam
        SUPPORTED_IMAGE_EXTENSIONS: !Ref DogsServiceSupportedImageExtensionsParam

Resources:
  CommonLambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: python3.13
      BuildArchitecture: x86_64
    Properties:
      LayerName: !Sub "${AWS::StackName}-${Stage}-common-layer"
      Description: Common utilities layer for Dogs Service and Image processing Lambdas
      ContentUri: layers/common/
      CompatibleRuntimes:
        - python3.13

  DogsServiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-${Stage}-lambda"
      CodeUri: dogs_service_lambda/
      Handler: app.lambda_handler
      Description: Lambda function for Dogs Service
      Layers:
        - !Ref CommonLambdaLayer
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: dogs-service
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DogsTable
        - AWSXRayDaemonWriteAccess
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource: !Sub "arn:aws:s3:::${AWS::StackName}-${Stage}-images/*"
            - Effect: Allow
              Action:
                - s3:ListBucket
              Resource: !Sub "arn:aws:s3:::${AWS::StackName}-${Stage}-images"
      Events:
        GetUserDogs:
          Type: Api
          Properties:
            Path: /users/{user_id}/dogs
            Method: GET
        PostUserDogs:
          Type: Api
          Properties:
            Path: /users/{user_id}/dogs
            Method: POST
        PostDogImageUpload:
          Type: Api
          Properties:
            Path: /users/{user_id}/dogs/{dog_id}/images
            Method: POST
        GetHealth:
          Type: Api
          Properties:
            Path: /health
            Method: GET
  
  DogsImageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-${Stage}-images"
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - PUT
              - POST
              - HEAD
            AllowedOrigins:
              - "*"
            MaxAge: 3000
  
  DogsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-${Stage}-db"
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      TimeToLiveSpecification:
        AttributeName: expires_at
        Enabled: true
  
  DogsImageProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-${Stage}-image-processor-lambda"
      CodeUri: dogs_image_processor_lambda/
      Handler: processor.lambda_handler
      Description: Lambda function for processing dog images uploaded to S3
      Layers:
        - !Ref CommonLambdaLayer
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: dogs-image-processor
      Policies:
        - AWSXRayDaemonWriteAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref DogsTable
        - Version: "2012-10-17"
          Statement: 
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource: !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}-${Stage}-image-processor-dlq"
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
              Resource: !Sub "arn:aws:s3:::${AWS::StackName}-${Stage}-images/*"
      Events:
        OnObjectCreated:
          Type: S3
          Properties:
            Bucket: !Ref DogsImageBucket
            Events: 
              - s3:ObjectCreated:*
              - s3:ObjectRemoved:*
  
  DogsImageProcessorDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${AWS::StackName}-${Stage}-image-processor-dlq"
      MessageRetentionPeriod: 1209600

  DogsImageProcessorEventInvokeConfig:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName: !Ref DogsImageProcessorFunction
      Qualifier: "$LATEST"
      MaximumRetryAttempts: 2
      MaximumEventAgeInSeconds: 60
      DestinationConfig:
        OnFailure:
          Destination: !GetAtt DogsImageProcessorDLQ.Arn
  
  DogsServiceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}-${Stage}-lambda"
      RetentionInDays: 14
  
  DogsImageProcessorLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}-${Stage}-image-processor-lambda"
      RetentionInDays: 14
  
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: "true"
  
Outputs:
  DogsImageBucket:
    Description: S3 Bucket for storing dog images
    Value: !Ref DogsImageBucket
  DogsServiceApi:
    Description: API Gateway endpoint URL for Prod stage for Dogs Service
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  DogsServiceFunction:
    Description: Dogs Service Lambda Function ARN
    Value: !GetAtt DogsServiceFunction.Arn
  DogsServiceFunctionIamRole:
    Description: Implicit IAM Role created for Dogs Service function
    Value: !GetAtt DogsServiceFunctionRole.Arn
